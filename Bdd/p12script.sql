-- MySQL Script generated by MySQL Workbench
-- Wed Aug 19 14:28:07 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema association
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema association
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `association` DEFAULT CHARACTER SET utf8 ;
USE `association` ;

-- -----------------------------------------------------
-- Table `association`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`User` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(70) NOT NULL,
  `lastname` VARCHAR(70) NOT NULL,
  `email` VARCHAR(70) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `active` TINYINT NOT NULL,
  PRIMARY KEY (`id_user`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `association`.`Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`Role` (
  `id_role` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`id_role`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `association`.`Article`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`Article` (
  `id_article` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(70) NOT NULL,
  `message` VARCHAR(255) NOT NULL,
  `date` DATE NOT NULL,
  `User_id_user` INT NOT NULL,
  `active` TINYINT NOT NULL,
  PRIMARY KEY (`id_article`, `User_id_user`),
  INDEX `fk_Article_User1_idx` (`User_id_user` ASC),
  CONSTRAINT `fk_Article_User1`
    FOREIGN KEY (`User_id_user`)
    REFERENCES `association`.`User` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `association`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`Category` (
  `id_category` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`id_category`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `association`.`Topic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`Topic` (
  `id_topic` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(70) NOT NULL,
  `User_id_user` INT NOT NULL,
  `active` TINYINT NOT NULL,
  PRIMARY KEY (`id_topic`, `User_id_user`),
  INDEX `fk_Topic_User1_idx` (`User_id_user` ASC),
  CONSTRAINT `fk_Topic_User1`
    FOREIGN KEY (`User_id_user`)
    REFERENCES `association`.`User` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `association`.`Post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`Post` (
  `id_post` INT NOT NULL AUTO_INCREMENT,
  `message` VARCHAR(255) NOT NULL,
  `date` DATE NOT NULL,
  `Topic_id_topic` INT NOT NULL,
  `User_id_user` INT NOT NULL,
  PRIMARY KEY (`id_post`, `Topic_id_topic`, `User_id_user`),
  INDEX `fk_Post_Topic1_idx` (`Topic_id_topic` ASC),
  INDEX `fk_Post_User1_idx` (`User_id_user` ASC),
  CONSTRAINT `fk_Post_Topic1`
    FOREIGN KEY (`Topic_id_topic`)
    REFERENCES `association`.`Topic` (`id_topic`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Post_User1`
    FOREIGN KEY (`User_id_user`)
    REFERENCES `association`.`User` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `association`.`Category_has_Article`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`Category_has_Article` (
  `Category_id_category` INT NOT NULL,
  `Article_id_article` INT NOT NULL,
  PRIMARY KEY (`Category_id_category`, `Article_id_article`),
  INDEX `fk_Category_has_Article_Article1_idx` (`Article_id_article` ASC),
  INDEX `fk_Category_has_Article_Category1_idx` (`Category_id_category` ASC),
  CONSTRAINT `fk_Category_has_Article_Category1`
    FOREIGN KEY (`Category_id_category`)
    REFERENCES `association`.`Category` (`id_category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Category_has_Article_Article1`
    FOREIGN KEY (`Article_id_article`)
    REFERENCES `association`.`Article` (`id_article`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `association`.`Category_has_Topic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`Category_has_Topic` (
  `Category_id_category` INT NOT NULL,
  `Topic_id_topic` INT NOT NULL,
  PRIMARY KEY (`Category_id_category`, `Topic_id_topic`),
  INDEX `fk_Category_has_Topic_Topic1_idx` (`Topic_id_topic` ASC),
  INDEX `fk_Category_has_Topic_Category1_idx` (`Category_id_category` ASC),
  CONSTRAINT `fk_Category_has_Topic_Category1`
    FOREIGN KEY (`Category_id_category`)
    REFERENCES `association`.`Category` (`id_category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Category_has_Topic_Topic1`
    FOREIGN KEY (`Topic_id_topic`)
    REFERENCES `association`.`Topic` (`id_topic`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `association`.`User_has_Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `association`.`User_has_Role` (
  `User_id_user` INT NOT NULL,
  `Role_id_role` INT NOT NULL,
  PRIMARY KEY (`User_id_user`, `Role_id_role`),
  INDEX `fk_User_has_Role_Role1_idx` (`Role_id_role` ASC),
  INDEX `fk_User_has_Role_User1_idx` (`User_id_user` ASC),
  CONSTRAINT `fk_User_has_Role_User1`
    FOREIGN KEY (`User_id_user`)
    REFERENCES `association`.`User` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Role_Role1`
    FOREIGN KEY (`Role_id_role`)
    REFERENCES `association`.`Role` (`id_role`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
